{"ast":null,"code":"var _jsxFileName = \"D:\\\\TRQ\\\\Pdf-Kita-main\\\\frontend\\\\src\\\\halaman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom'; // ← Tambahkan baris ini\nimport './halaman.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction Halaman() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [notif, setNotif] = useState('');\n  const [isLoadingJpg, setIsLoadingJpg] = useState(false); // Tambahkan state baru\n  const fileInputRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('userToken');\n    setIsLoggedIn(!!token);\n\n    // Reset guestConvertCount jika login\n    if (token) {\n      localStorage.removeItem('guestConvertCount');\n    }\n    const uploadedFile = localStorage.getItem('uploadedFile');\n    if (uploadedFile) {\n      try {\n        const parsed = JSON.parse(uploadedFile);\n        setUploadedFiles(Array.isArray(parsed) ? parsed : [parsed]);\n      } catch {\n        setUploadedFiles([]);\n      }\n    }\n  }, []);\n  const handleDelete = fileName => {\n    fetch(`http://localhost:5000/api/files/${encodeURIComponent(fileName)}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (!response.ok) throw new Error('Gagal menghapus file di database');\n      const updatedFiles = uploadedFiles.filter(file => file.name !== fileName);\n      setUploadedFiles(updatedFiles);\n      localStorage.setItem('uploadedFile', JSON.stringify(updatedFiles));\n    }).catch(error => {\n      console.error('Terjadi kesalahan:', error);\n      alert('Gagal menghapus file di database.');\n    });\n  };\n  const handleAddFile = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n      fileInputRef.current.click();\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const allowedExtensions = ['doc', 'docx', 'xls', 'xlsx', 'jpg', 'jpeg'];\n      const fileExtension = file.name.split('.').pop().toLowerCase();\n      if (allowedExtensions.includes(fileExtension)) {\n        setNotif('Mohon tunggu sebentar, file sedang ter-upload...');\n        const formData = new FormData();\n        formData.append('file', file);\n        fetch(`${API_URL}/api/files/upload`, {\n          method: 'POST',\n          body: formData\n        }).then(response => {\n          if (!response.ok) throw new Error('Gagal upload file ke server');\n          return response.json();\n        }).then(data => {\n          const newFile = {\n            name: data.originalname,\n            size: file.size,\n            type: file.type,\n            path: `/uploads/${data.filename}`,\n            uploadedBy: 1\n          };\n          const updatedFiles = [...uploadedFiles, newFile];\n          setUploadedFiles(updatedFiles);\n          localStorage.setItem('uploadedFile', JSON.stringify(updatedFiles));\n          setNotif('Sukses di-upload!');\n          setTimeout(() => setNotif(''), 1500);\n        }).catch(error => {\n          console.error('Terjadi kesalahan:', error);\n          setNotif('Gagal upload file ke server.');\n          setTimeout(() => setNotif(''), 2000);\n        });\n      } else {\n        setNotif('Hanya file Word, Excel, dan JPG yang dapat diunggah.');\n        setTimeout(() => setNotif(''), 2000);\n      }\n    }\n  };\n\n  // Tambahkan fungsi pengecekan guest limit\n  const checkGuestLimit = () => {\n    if (!isLoggedIn) {\n      const count = Number(localStorage.getItem('guestConvertCount') || 0);\n      if (count >= 1) {\n        setNotif('maaf login dulu bro');\n        return false;\n      }\n      localStorage.setItem('guestConvertCount', count + 1);\n    }\n    return true;\n  };\n  const handleConvertWordToPdf = async () => {\n    if (!checkGuestLimit()) return;\n    if (!uploadedFiles.length) return alert('Pilih file dulu!');\n    const fileMeta = uploadedFiles[0];\n    const allowedExtensions = ['doc', 'docx'];\n    const fileExtension = fileMeta.name.split('.').pop().toLowerCase();\n    if (!allowedExtensions.includes(fileExtension)) {\n      return alert('Pilih file Word (.doc/.docx) untuk dikonversi ke PDF!');\n    }\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/api/convert/word-to-pdf', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fileName: fileMeta.name\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server error: ${errorText}`);\n      }\n      const data = await response.json();\n      localStorage.setItem('selectedFile', data.fileUrl);\n      localStorage.setItem('selectedFileName', fileMeta.name.replace(/\\.[^/.]+$/, '') + '.pdf');\n      navigate('/download');\n    } catch (error) {\n      console.error('Konversi gagal:', error);\n      alert('Konversi gagal: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleConvertExcelToPdf = async () => {\n    if (!checkGuestLimit()) return;\n    if (!uploadedFiles.length) return alert('Pilih file dulu!');\n    const fileMeta = uploadedFiles[0];\n    const allowedExtensions = ['xls', 'xlsx'];\n    const fileExtension = fileMeta.name.split('.').pop().toLowerCase();\n    if (!allowedExtensions.includes(fileExtension)) {\n      return alert('Pilih file Excel (.xls/.xlsx) untuk dikonversi ke PDF!');\n    }\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/api/convert/excel-to-pdf', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fileName: fileMeta.name\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server error: ${errorText}`);\n      }\n      const data = await response.json();\n      localStorage.setItem('selectedFile', data.fileUrl);\n      localStorage.setItem('selectedFileName', fileMeta.name.replace(/\\.[^/.]+$/, '') + '.pdf');\n      navigate('/download');\n    } catch (error) {\n      console.error('Konversi gagal:', error);\n      alert('Konversi gagal: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleConvertJpgToPdf = async () => {\n    if (!checkGuestLimit()) return;\n    if (!uploadedFiles.length) return alert('Pilih file dulu!');\n    const fileMeta = uploadedFiles[0];\n    const allowedExtensions = ['jpg', 'jpeg'];\n    const fileExtension = fileMeta.name.split('.').pop().toLowerCase();\n    if (!allowedExtensions.includes(fileExtension)) {\n      return alert('Pilih file JPG untuk dikonversi ke PDF!');\n    }\n    try {\n      // Tambahkan delay 0.5 detik sebelum setIsLoadingJpg(true)\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setIsLoadingJpg(true);\n      const response = await fetch('http://localhost:5000/api/convert/jpg-to-pdf', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fileName: fileMeta.name\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server error: ${errorText}`);\n      }\n      const data = await response.json();\n      localStorage.setItem('selectedFile', data.fileUrl);\n      localStorage.setItem('selectedFileName', fileMeta.name.replace(/\\.[^/.]+$/, '') + '.pdf');\n      navigate('/download');\n    } catch (error) {\n      console.error('Konversi gagal:', error);\n      alert('Konversi gagal: ' + error.message);\n    } finally {\n      setIsLoadingJpg(false); // Reset loading JPG\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        zIndex: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/'),\n        children: \"\\u2190 Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"halaman-content\",\n      children: [notif && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fffae6',\n          color: '#e67e22',\n          padding: '10px 20px',\n          borderRadius: '8px',\n          marginBottom: '16px',\n          fontWeight: 'bold',\n          border: '1px solid #ffe0b2'\n        },\n        children: notif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"halaman-title\",\n        children: \"Choose Your File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"halaman-subtitle\",\n        children: \"Pilih File converter kamu!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"convert-button\",\n          onClick: handleConvertWordToPdf,\n          disabled: isLoading || isLoadingJpg,\n          children: \"Word To PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"convert-button\",\n          onClick: handleConvertExcelToPdf,\n          disabled: isLoading || isLoadingJpg,\n          children: \"Excel To PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"convert-button\",\n          onClick: handleConvertJpgToPdf,\n          disabled: isLoadingJpg || isLoading,\n          children: isLoadingJpg ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\",\n              style: {\n                marginRight: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), \"Tunggu sebentar...\"]\n          }, void 0, true) : 'JPG To PDF'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        children: uploadedFiles.length > 0 && uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"uploaded-file-name\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => handleDelete(file.name),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleAddFile,\n          children: \"Tambahkan File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".doc,.docx,.xls,.xlsx,.jpg,.jpeg\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(Halaman, \"KZIKzrzutBIKixVnRF5U989vvTM=\", false, function () {\n  return [useNavigate];\n});\n_c = Halaman;\nexport default Halaman;\nvar _c;\n$RefreshReg$(_c, \"Halaman\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","Halaman","_s","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","uploadedFiles","setUploadedFiles","notif","setNotif","isLoadingJpg","setIsLoadingJpg","fileInputRef","navigate","token","localStorage","getItem","removeItem","uploadedFile","parsed","JSON","parse","Array","isArray","handleDelete","fileName","fetch","encodeURIComponent","method","then","response","ok","Error","updatedFiles","filter","file","name","setItem","stringify","catch","error","console","alert","handleAddFile","current","value","click","handleFileChange","event","target","files","allowedExtensions","fileExtension","split","pop","toLowerCase","includes","formData","FormData","append","body","json","data","newFile","originalname","size","type","path","filename","uploadedBy","setTimeout","checkGuestLimit","count","Number","handleConvertWordToPdf","length","fileMeta","headers","errorText","text","fileUrl","replace","message","handleConvertExcelToPdf","handleConvertJpgToPdf","Promise","resolve","className","children","style","position","top","left","width","zIndex","onClick","_jsxFileName","lineNumber","columnNumber","background","color","padding","borderRadius","marginBottom","fontWeight","border","disabled","marginRight","map","index","accept","ref","display","onChange","_c","$RefreshReg$"],"sources":["D:/TRQ/Pdf-Kita-main/frontend/src/halaman.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // ← Tambahkan baris ini\r\nimport './halaman.css';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction Halaman() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [notif, setNotif] = useState('');\r\n  const [isLoadingJpg, setIsLoadingJpg] = useState(false); // Tambahkan state baru\r\n  const fileInputRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('userToken');\r\n    setIsLoggedIn(!!token);\r\n\r\n    // Reset guestConvertCount jika login\r\n    if (token) {\r\n      localStorage.removeItem('guestConvertCount');\r\n    }\r\n\r\n    const uploadedFile = localStorage.getItem('uploadedFile');\r\n    if (uploadedFile) {\r\n      try {\r\n        const parsed = JSON.parse(uploadedFile);\r\n        setUploadedFiles(Array.isArray(parsed) ? parsed : [parsed]);\r\n      } catch {\r\n        setUploadedFiles([]);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleDelete = (fileName) => {\r\n    fetch(`http://localhost:5000/api/files/${encodeURIComponent(fileName)}`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error('Gagal menghapus file di database');\r\n        const updatedFiles = uploadedFiles.filter((file) => file.name !== fileName);\r\n        setUploadedFiles(updatedFiles);\r\n        localStorage.setItem('uploadedFile', JSON.stringify(updatedFiles));\r\n      })\r\n      .catch((error) => {\r\n        console.error('Terjadi kesalahan:', error);\r\n        alert('Gagal menghapus file di database.');\r\n      });\r\n  };\r\n\r\n  const handleAddFile = () => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const allowedExtensions = ['doc', 'docx', 'xls', 'xlsx', 'jpg', 'jpeg'];\r\n      const fileExtension = file.name.split('.').pop().toLowerCase();\r\n\r\n      if (allowedExtensions.includes(fileExtension)) {\r\n        setNotif('Mohon tunggu sebentar, file sedang ter-upload...');\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        fetch(`${API_URL}/api/files/upload`, {\r\n          method: 'POST',\r\n          body: formData,\r\n        })\r\n          .then((response) => {\r\n            if (!response.ok) throw new Error('Gagal upload file ke server');\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            const newFile = {\r\n              name: data.originalname,\r\n              size: file.size,\r\n              type: file.type,\r\n              path: `/uploads/${data.filename}`,\r\n              uploadedBy: 1,\r\n            };\r\n            const updatedFiles = [...uploadedFiles, newFile];\r\n            setUploadedFiles(updatedFiles);\r\n            localStorage.setItem('uploadedFile', JSON.stringify(updatedFiles));\r\n            setNotif('Sukses di-upload!');\r\n            setTimeout(() => setNotif(''), 1500);\r\n          })\r\n          .catch((error) => {\r\n            console.error('Terjadi kesalahan:', error);\r\n            setNotif('Gagal upload file ke server.');\r\n            setTimeout(() => setNotif(''), 2000);\r\n          });\r\n      } else {\r\n        setNotif('Hanya file Word, Excel, dan JPG yang dapat diunggah.');\r\n        setTimeout(() => setNotif(''), 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Tambahkan fungsi pengecekan guest limit\r\n  const checkGuestLimit = () => {\r\n    if (!isLoggedIn) {\r\n      const count = Number(localStorage.getItem('guestConvertCount') || 0);\r\n      if (count >= 1) {\r\n        setNotif('maaf login dulu bro');\r\n        return false;\r\n      }\r\n      localStorage.setItem('guestConvertCount', count + 1);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleConvertWordToPdf = async () => {\r\n    if (!checkGuestLimit()) return;\r\n\r\n    if (!uploadedFiles.length) return alert('Pilih file dulu!');\r\n    const fileMeta = uploadedFiles[0];\r\n    const allowedExtensions = ['doc', 'docx'];\r\n    const fileExtension = fileMeta.name.split('.').pop().toLowerCase();\r\n    if (!allowedExtensions.includes(fileExtension)) {\r\n      return alert('Pilih file Word (.doc/.docx) untuk dikonversi ke PDF!');\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch('http://localhost:5000/api/convert/word-to-pdf', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ fileName: fileMeta.name }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Server error: ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('selectedFile', data.fileUrl);\r\n      localStorage.setItem('selectedFileName', fileMeta.name.replace(/\\.[^/.]+$/, '') + '.pdf');\r\n      navigate('/download');\r\n    } catch (error) {\r\n      console.error('Konversi gagal:', error);\r\n      alert('Konversi gagal: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleConvertExcelToPdf = async () => {\r\n    if (!checkGuestLimit()) return;\r\n\r\n    if (!uploadedFiles.length) return alert('Pilih file dulu!');\r\n    const fileMeta = uploadedFiles[0];\r\n    const allowedExtensions = ['xls', 'xlsx'];\r\n    const fileExtension = fileMeta.name.split('.').pop().toLowerCase();\r\n    if (!allowedExtensions.includes(fileExtension)) {\r\n      return alert('Pilih file Excel (.xls/.xlsx) untuk dikonversi ke PDF!');\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch('http://localhost:5000/api/convert/excel-to-pdf', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ fileName: fileMeta.name }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Server error: ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('selectedFile', data.fileUrl);\r\n      localStorage.setItem('selectedFileName', fileMeta.name.replace(/\\.[^/.]+$/, '') + '.pdf');\r\n      navigate('/download');\r\n    } catch (error) {\r\n      console.error('Konversi gagal:', error);\r\n      alert('Konversi gagal: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleConvertJpgToPdf = async () => {\r\n    if (!checkGuestLimit()) return;\r\n\r\n    if (!uploadedFiles.length) return alert('Pilih file dulu!');\r\n    const fileMeta = uploadedFiles[0];\r\n    const allowedExtensions = ['jpg', 'jpeg'];\r\n    const fileExtension = fileMeta.name.split('.').pop().toLowerCase();\r\n    if (!allowedExtensions.includes(fileExtension)) {\r\n      return alert('Pilih file JPG untuk dikonversi ke PDF!');\r\n    }\r\n\r\n    try {\r\n      // Tambahkan delay 0.5 detik sebelum setIsLoadingJpg(true)\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      setIsLoadingJpg(true);\r\n\r\n      const response = await fetch('http://localhost:5000/api/convert/jpg-to-pdf', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ fileName: fileMeta.name }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Server error: ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('selectedFile', data.fileUrl);\r\n      localStorage.setItem('selectedFileName', fileMeta.name.replace(/\\.[^/.]+$/, '') + '.pdf');\r\n      navigate('/download');\r\n    } catch (error) {\r\n      console.error('Konversi gagal:', error);\r\n      alert('Konversi gagal: ' + error.message);\r\n    } finally {\r\n      setIsLoadingJpg(false); // Reset loading JPG\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      {/* Header kiri atas */}\r\n      <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', zIndex: 20 }}>\r\n        <button className=\"back-button\" onClick={() => navigate('/')}>← Back to Home</button>\r\n      </div>\r\n\r\n      <div className=\"halaman-content\">\r\n        {/* Notifikasi upload */}\r\n        {notif && (\r\n          <div style={{\r\n            background: '#fffae6',\r\n            color: '#e67e22',\r\n            padding: '10px 20px',\r\n            borderRadius: '8px',\r\n            marginBottom: '16px',\r\n            fontWeight: 'bold',\r\n            border: '1px solid #ffe0b2'\r\n          }}>\r\n            {notif}\r\n          </div>\r\n        )}\r\n        <h2 className=\"halaman-title\">Choose Your File</h2>\r\n        <p className=\"halaman-subtitle\">Pilih File converter kamu!</p>\r\n\r\n        <div className=\"button-container\">\r\n          <button className=\"convert-button\" onClick={handleConvertWordToPdf} disabled={isLoading || isLoadingJpg}>Word To PDF</button>\r\n          <button className=\"convert-button\" onClick={handleConvertExcelToPdf} disabled={isLoading || isLoadingJpg}>Excel To PDF</button>\r\n          <button\r\n            className=\"convert-button\"\r\n            onClick={handleConvertJpgToPdf}\r\n            disabled={isLoadingJpg || isLoading}\r\n          >\r\n            {isLoadingJpg ? (\r\n              <>\r\n                <span className=\"loading-spinner\" style={{ marginRight: 8 }} />\r\n                Tunggu sebentar...\r\n              </>\r\n            ) : (\r\n              'JPG To PDF'\r\n            )}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"uploaded-files\">\r\n          {uploadedFiles.length > 0 && uploadedFiles.map((file, index) => (\r\n            <div key={index} className=\"uploaded-file\">\r\n              <span className=\"uploaded-file-name\">{file.name}</span>\r\n              <button className=\"delete-btn\" onClick={() => handleDelete(file.name)}>Delete</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {isLoading && <div className=\"loading-spinner\">Loading</div>}\r\n\r\n        {isLoggedIn && (\r\n          <>\r\n            <button className=\"upload-btn\" onClick={handleAddFile}>Tambahkan File</button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".doc,.docx,.xls,.xlsx,.jpg,.jpeg\"\r\n              ref={fileInputRef}\r\n              style={{ display: 'none' }}\r\n              onChange={handleFileChange}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Halaman;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}